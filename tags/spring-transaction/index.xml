<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-transaction on 南乡清水的技术积累</title>
    <link>https://nicky-chin.cn/tags/spring-transaction/</link>
    <description>Recent content in spring-transaction on 南乡清水的技术积累</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved - 2018</copyright>
    <lastBuildDate>Tue, 19 May 2020 13:39:15 +0800</lastBuildDate>
    
	<atom:link href="https://nicky-chin.cn/tags/spring-transaction/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Transaction源码解析之事务提交与回滚</title>
      <link>https://nicky-chin.cn/post-2/spring-transaction-commit/</link>
      <pubDate>Tue, 19 May 2020 13:39:15 +0800</pubDate>
      
      <guid>https://nicky-chin.cn/post-2/spring-transaction-commit/</guid>
      <description>1 事务还原 1.1 调试demo 我们使用常用的业务代码来做调试：
@Service(&amp;#34;personService&amp;#34;) public class PersonServiceImpl implements IPersonService { @Override @Transactional(propagation = Propagation.</description>
    </item>
    
    <item>
      <title>Transaction源码解析之事务提交与回滚</title>
      <link>https://nicky-chin.cn/2020/05/19/spring-transaction-commit/</link>
      <pubDate>Tue, 19 May 2020 13:39:15 +0800</pubDate>
      
      <guid>https://nicky-chin.cn/2020/05/19/spring-transaction-commit/</guid>
      <description>1 事务还原 1.1 调试demo 我们使用常用的业务代码来做调试：
@Service(&amp;#34;personService&amp;#34;) public class PersonServiceImpl implements IPersonService { @Override @Transactional(propagation = Propagation.</description>
    </item>
    
    <item>
      <title>Transaction源码解析之事务预处理</title>
      <link>https://nicky-chin.cn/post-2/spring-transaction-prepare/</link>
      <pubDate>Mon, 11 May 2020 12:18:15 +0800</pubDate>
      
      <guid>https://nicky-chin.cn/post-2/spring-transaction-prepare/</guid>
      <description>1 调试源码 接上篇Transaction源码解析之事务的配置解析
我们调用相应的service类,来调试具体的事务处理流程，测试代码如下:
public void testInvokeTransactional() throws Exception { TransactionalTestBean testBean = getTestBean(); CallCountingTransactionManager ptm = (CallCountingTransactionManager) context.</description>
    </item>
    
    <item>
      <title>Transaction源码解析之事务预处理</title>
      <link>https://nicky-chin.cn/2020/05/11/spring-transaction-prepare/</link>
      <pubDate>Mon, 11 May 2020 12:18:15 +0800</pubDate>
      
      <guid>https://nicky-chin.cn/2020/05/11/spring-transaction-prepare/</guid>
      <description>1 调试源码 接上篇Transaction源码解析之事务的配置解析
我们调用相应的service类,来调试具体的事务处理流程，测试代码如下:
public void testInvokeTransactional() throws Exception { TransactionalTestBean testBean = getTestBean(); CallCountingTransactionManager ptm = (CallCountingTransactionManager) context.</description>
    </item>
    
    <item>
      <title>Transaction源码解析之事务配置解析</title>
      <link>https://nicky-chin.cn/post-2/spring-transaction-config/</link>
      <pubDate>Sun, 03 May 2020 11:18:15 +0800</pubDate>
      
      <guid>https://nicky-chin.cn/post-2/spring-transaction-config/</guid>
      <description>1 事务配置 关于Spring的事务，大家每天都会遇见或者用到，为了更好的理解Transaction的原理机制，我们从源码角度来解析，本文的调试源码基于Spring-3.2.x版本进行调试。
1.1 配置 配置XML文件annotationTransactionNamespaceHandlerTests.xml
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xmlns:aop=&amp;quot;http://www.springframework.org/schema/aop&amp;quot; xmlns:context=&amp;quot;http://www.springframework.org/schema/context&amp;quot; xmlns:tx=&amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>Transaction源码解析之事务配置解析</title>
      <link>https://nicky-chin.cn/2020/05/03/spring-transaction-config/</link>
      <pubDate>Sun, 03 May 2020 11:18:15 +0800</pubDate>
      
      <guid>https://nicky-chin.cn/2020/05/03/spring-transaction-config/</guid>
      <description>1 事务配置 关于Spring的事务，大家每天都会遇见或者用到，为了更好的理解Transaction的原理机制，我们从源码角度来解析，本文的调试源码基于Spring-3.2.x版本进行调试。
1.1 配置 配置XML文件annotationTransactionNamespaceHandlerTests.xml
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xmlns:aop=&amp;quot;http://www.springframework.org/schema/aop&amp;quot; xmlns:context=&amp;quot;http://www.springframework.org/schema/context&amp;quot; xmlns:tx=&amp;quot;http://www.</description>
    </item>
    
  </channel>
</rss>